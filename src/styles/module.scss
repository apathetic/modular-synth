@import 'variables.scss';

/* --------------------------------
  Module
--------------------------------- */

.module {
  height: var(--cellHeight);
  width: var(--cellWidth);
  border: 1px solid var(--color-grey-dark);
  border-radius: var(--border-radius);
  position: absolute;
  transition: all var(--transition-time-slow);
  // transition: all var(--transition-time)
  // transition: left $transition-time-slow, top $transition-time-slow, border var(--transition-time)
  transition-timing-function: ease-in-out;
  z-index: 1;

  // &--tall {
    height: 112px; // in `edit` mode
  // }

  &:hover {
    filter: brightness(1.2);

    .module-details {
      color: #fff;
    }
  }

  &.dragging {
    cursor: move;
    transition: none;
    opacity: 0.8;
  }

  &.active {
    outline: 2px solid green
  }

  &-details {
    background: #777;
    border-bottom: 1px solid #000;
    border-top: 1px solid #999;
    color: #000;

    position: absolute;
    width: 100%;

    h3 {
      font-weight: 700;
      padding: 0.1em 0.2em;
      margin: 0;
      // text-shadow: 0 0 1px #ddd;
    }
  }

  &-interface {
    overflow: hidden;
    padding: 36px 24px 18px;
    height: 100%;
    visibility: hidden;
    transition: visibility 0s;    // yes you can do this (to delay the toggle of block/none);
  }

  &-connections {
    position: absolute;
    width: 100%;
    top: 12px;
    height: 0;

    span {
      margin: 8px 0;
      display: block;
      width: 3px;
      height: 12px;
      background: #eee; // #111;
      cursor: pointer;
      text-transform: uppercase;
      font-size: 0.75em;

      &:hover {
        background: orange;
      }

      &:after {
        content: attr(data-label);
        width: 5em;
        position: absolute;
        text-transform: uppercase;
        line-height: 1.6;
      }
    }
  }

  .inlets {
    float: left;
  }

  .outlets {
    float: right;
  }

  .inlet {
    left: -5px;

    &:after {
      left: 1em;
    }
  }

  .outlet {
    right: -5px;

    &:after {
      right: 1em;
      text-align: right;
    }
  }

  > div {
    height: 100%;
  }
}

.play-mode {
  .module {
    width: calc(var(--rackWidth) * 3);   // default rack width is 3U
    // width: auto;
    height: var(--rackHeight);
    // transition: all var(--transition-time)

    &-interface {
      display: block;
      visibility: visible;
      transition-delay: var(--transition-time-slow);
    }

    &-connections {
      display: none;
    }

    &.h\:1U { height: calc(var(--rackHeight) * 1); }
    &.h\:2U { height: calc(var(--rackHeight) * 2); }

    &.w\:1U { width: calc(var(--rackWidth) * 1); }
    &.w\:2U { width: calc(var(--rackWidth) * 2); }
    &.w\:3U { width: calc(var(--rackWidth) * 3); }
    &.w\:4U { width: calc(var(--rackWidth) * 4); }
    &.w\:6U { width: calc(var(--rackWidth) * 6); }
  }
}
