@import 'variables.scss';

/* --------------------------------
   Module
--------------------------------- */

.module {
  height: $cellHeight;
  width: $cellWidth;
  border: 1px solid $color-grey-dark;
  border-radius: $border-radius;
  position: absolute;
  transition: all $transition-time-slow;
  // transition: all $transition-time;
  // transition: left $transition-time-slow, top $transition-time-slow, border $transition-time;
  transition-timing-function: ease-in-out;
  z-index: 1;

  &--tall {
    height: 112px;
  }

  &:hover {
    filter: brightness(1.2);

    .module-details {
      color: #fff;
    }
  }

  &.dragging {
    cursor: move;
    transition: none;
    opacity: 0.8;
  }

  &-details {
    background: #777;
    border-bottom: 1px solid #000;
    border-top: 1px solid #999;
    color: #000;

    position: absolute;
    width: 100%;

    h3 {
      font-weight: 700;
      padding: 0.1em 0.2em;
      margin: 0;
      // text-shadow: 0 0 1px #ddd;
    }
  }

  &-interface {
    overflow: hidden;
    padding: 36px 24px 18px;
    height: 100%;
    visibility: hidden;
    transition: visibility 0s;    // yes you can do this (to delay the toggle of block/none);
  }

  &-connections {
    position: absolute;
    width: 100%;
    top: 12px;
    height: 0;

    span {
      margin: 8px 0;
      display: block;
      width: 3px;
      height: 12px;
      background: #eee; // #111;
      cursor: pointer;
      text-transform: uppercase;
      font-size: 0.75em;

      &:hover {
        background: orange;
      }

      &:after {
        content: attr(data-label);
        width: 5em;
        position: absolute;
        text-transform: uppercase;
        line-height: 1.6;
      }
    }
  }

  .inlets {
    float: left;
  }

  .outlets {
    float: right;
  }

  .inlet {
    left: -5px;

    &:after {
      left: 1em;
    }
  }

  .outlet {
    right: -5px;

    &:after {
      right: 1em;
      text-align: right;
    }
  }
}

.play-mode {
  .module {
    width: #{$rackWidth * 3};   // default rack width is 3U
    height: $rackHeight;
    // transition: all $transition-time;

    &._1U { width: #{$rackWidth * 1}; }
    &._2U { width: #{$rackWidth * 2}; }
    &._3U { width: #{$rackWidth * 3}; }
    &._4U { width: #{$rackWidth * 4}; }
    &._6U { width: #{$rackWidth * 6}; }

    &-interface {
      display: block;
      visibility: visible;
      transition-delay: $transition-time-slow;
    }

    &-connections {
      display: none;
    }
  }
}
