# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

jobs:
  build:
    docker:
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/node:9.2

    working_directory: ~/malfunction

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Build!
      - run: npm run build

      # Tests!
      # - run: npm test

  deploy:
    working_directory: ~/malfunction
    docker:
      - image: circleci/node:9-browsers
    steps:
      # Log the current branch
      - run: echo ${CIRCLE_BRANCH}

      - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

      # - add_ssh_keys:
      #     fingerprints:
      #       - "..................."

      - run: scp -oStrictHostKeyChecking=no -r $CIRCLE_PROJECT_REPONAME/build ${DEPLOY_USER}@${DEPLOY_IP}:${DEPLOY_PATH}
        # name: scp dist
        # command : scp -oStrictHostKeyChecking=no -i ~/.ssh/id_rsa_........... -r /home/ubuntu/mdph/dist/ ${DEPLOY_USER}@${DEPLOY_IP}:${DEPLOY_PATH}/.

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master

